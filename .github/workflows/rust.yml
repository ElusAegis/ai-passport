name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: clippy, rustfmt

    - name: Check code formatting
      run: cargo fmt -- --check

    - name: Run Clippy
      run: cargo clippy -- -D warnings

    - name: Build the project
      run: cargo build --release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: target/release/passport-for-ai

  test-local:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    - name: Change permissions for the binary
      run: chmod +x passport-for-ai

    - name: Run local `create-passport`
      run: ./passport-for-ai local create-passport model/network.onnx --save-to ./model

    - name: Run local `attribute-content`
      run: ./passport-for-ai local attribute-content model/network.onnx model/input.json --save-to ./model

    - name: Run local `verify-attribution`
      run: ./passport-for-ai local verify-attribution model/model_network_db9e2eef_passport.json model/model_db9e2eef_attribution_certificate.json

  test-remote:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    - name: Change permissions for the binary
      run: chmod +x passport-for-ai

    - name: Run remote `anthropic-conversation`
      run: echo "1\nHello ChatGPT!\nexit\n" | ./passport-for-ai remote attributed-conversation
      env:
        REDPILL_API_KEY: ${{ secrets.RED_PILL_API_KEY }}

    - name: Find generated proof file
      id: find_proof
      run: |
        # Find the generated proof file with model type and timestamp
        PROOF_FILE=$(find . -name '*_conversation_proof.json' -type f | head -n 1)
        echo "proof_file=$PROOF_FILE" >> $GITHUB_ENV
        echo "Found proof file: $PROOF_FILE"

    - name: Run remote `verify-attribution`
      run: ./passport-for-ai remote verify-attribution "$proof_file"